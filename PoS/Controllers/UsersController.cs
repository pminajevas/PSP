/*
 * PoS
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UsersApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerId"></param>
        /// <response code="204">No Content</response>
        [HttpDelete]
        [Route("/Users/Customer/{customerId}")]
        public virtual IActionResult UsersCustomerCustomerIdDelete([FromRoute][Required]Guid? customerId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/Customer/{customerId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Customer), description: "Success")]
        public virtual IActionResult UsersCustomerCustomerIdGet([FromRoute][Required]Guid? customerId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Customer));
            string exampleJson = null;
            exampleJson = "{\n  \"loyaltyId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"birthday\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"address\" : \"address\",\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"points\" : 0.8008281904610115\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Customer>(exampleJson)
                        : default(Customer);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerId"></param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPut]
        [Route("/Users/Customer/{customerId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Customer), description: "Success")]
        public virtual IActionResult UsersCustomerCustomerIdPut([FromRoute][Required]string customerId, [FromBody]Customer body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Customer));
            string exampleJson = null;
            exampleJson = "{\n  \"loyaltyId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"birthday\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"address\" : \"address\",\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"points\" : 0.8008281904610115\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Customer>(exampleJson)
                        : default(Customer);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userName"></param>
        /// <param name="password"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Users/Customer/Login")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Role>), description: "Success")]
        public virtual IActionResult UsersCustomerLoginPost([FromQuery]string userName, [FromQuery]string password)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Role>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n}, {\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Role>>(exampleJson)
                        : default(List<Role>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerId"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Users/Customer/Logout/{customerId}")]
        public virtual IActionResult UsersCustomerLogoutCustomerIdPost([FromRoute][Required]Guid? customerId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Created</response>
        [HttpPost]
        [Route("/Users/Customer")]
        [SwaggerResponse(statusCode: 201, type: typeof(Customer), description: "Created")]
        public virtual IActionResult UsersCustomerPost([FromBody]Customer body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Customer));
            string exampleJson = null;
            exampleJson = "{\n  \"loyaltyId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"birthday\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"address\" : \"address\",\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"points\" : 0.8008281904610115\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Customer>(exampleJson)
                        : default(Customer);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="businessId"></param>
        /// <param name="loyaltyId"></param>
        /// <param name="orderBy"></param>
        /// <param name="sorting"></param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/Customers")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Customer>), description: "Success")]
        public virtual IActionResult UsersCustomersGet([FromQuery]Guid? businessId, [FromQuery]Guid? loyaltyId, [FromQuery]string orderBy, [FromQuery]string sorting, [FromQuery]int? pageIndex, [FromQuery]int? pageSize)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Customer>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"loyaltyId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"birthday\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"address\" : \"address\",\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"points\" : 0.8008281904610115\n}, {\n  \"loyaltyId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"birthday\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"address\" : \"address\",\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"points\" : 0.8008281904610115\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Customer>>(exampleJson)
                        : default(List<Customer>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <response code="204">No Content</response>
        [HttpDelete]
        [Route("/Users/Role/{id}")]
        public virtual IActionResult UsersRoleIdDelete([FromRoute][Required]Guid? id)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/Role/{id}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Role), description: "Success")]
        public virtual IActionResult UsersRoleIdGet([FromRoute][Required]Guid? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Role));
            string exampleJson = null;
            exampleJson = "{\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Role>(exampleJson)
                        : default(Role);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPut]
        [Route("/Users/Role/{id}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Role), description: "Success")]
        public virtual IActionResult UsersRoleIdPut([FromRoute][Required]string id, [FromBody]Role body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Role));
            string exampleJson = null;
            exampleJson = "{\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Role>(exampleJson)
                        : default(Role);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Created</response>
        [HttpPost]
        [Route("/Users/Role")]
        [SwaggerResponse(statusCode: 201, type: typeof(Role), description: "Created")]
        public virtual IActionResult UsersRolePost([FromBody]Role body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Role));
            string exampleJson = null;
            exampleJson = "{\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Role>(exampleJson)
                        : default(Role);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userName"></param>
        /// <param name="password"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Users/Staff/Login")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Role>), description: "Success")]
        public virtual IActionResult UsersStaffLoginPost([FromQuery]string userName, [FromQuery]string password)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Role>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n}, {\n  \"description\" : \"description\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userRole\" : \"Administrator\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Role>>(exampleJson)
                        : default(List<Role>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="staffId"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Users/Staff/Logout/{staffId}")]
        public virtual IActionResult UsersStaffLogoutStaffIdPost([FromRoute][Required]Guid? staffId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Created</response>
        [HttpPost]
        [Route("/Users/Staff")]
        [SwaggerResponse(statusCode: 201, type: typeof(Staff), description: "Created")]
        public virtual IActionResult UsersStaffPost([FromBody]Staff body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Staff));
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"hireDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"phoneNumber\" : \"phoneNumber\",\n  \"roles\" : [ {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  }, {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  } ],\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"email\" : \"email\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Staff>(exampleJson)
                        : default(Staff);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="staffId"></param>
        /// <response code="204">No Content</response>
        [HttpDelete]
        [Route("/Users/Staff/{staffId}")]
        public virtual IActionResult UsersStaffStaffIdDelete([FromRoute][Required]Guid? staffId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="staffId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/Staff/{staffId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Staff), description: "Success")]
        public virtual IActionResult UsersStaffStaffIdGet([FromRoute][Required]Guid? staffId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Staff));
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"hireDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"phoneNumber\" : \"phoneNumber\",\n  \"roles\" : [ {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  }, {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  } ],\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"email\" : \"email\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Staff>(exampleJson)
                        : default(Staff);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="staffId"></param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPut]
        [Route("/Users/Staff/{staffId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(Staff), description: "Success")]
        public virtual IActionResult UsersStaffStaffIdPut([FromRoute][Required]string staffId, [FromBody]Staff body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Staff));
            string exampleJson = null;
            exampleJson = "{\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"hireDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"phoneNumber\" : \"phoneNumber\",\n  \"roles\" : [ {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  }, {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  } ],\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"email\" : \"email\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Staff>(exampleJson)
                        : default(Staff);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="businessId"></param>
        /// <param name="role"></param>
        /// <param name="orderBy"></param>
        /// <param name="sorting"></param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/Staffs")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Staff>), description: "Success")]
        public virtual IActionResult UsersStaffsGet([FromQuery]Guid? businessId, [FromQuery]string role, [FromQuery]string orderBy, [FromQuery]string sorting, [FromQuery]int? pageIndex, [FromQuery]int? pageSize)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Staff>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"hireDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"phoneNumber\" : \"phoneNumber\",\n  \"roles\" : [ {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  }, {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  } ],\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"email\" : \"email\"\n}, {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"hireDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"phoneNumber\" : \"phoneNumber\",\n  \"roles\" : [ {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  }, {\n    \"description\" : \"description\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"userRole\" : \"Administrator\"\n  } ],\n  \"businessId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"email\" : \"email\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Staff>>(exampleJson)
                        : default(List<Staff>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Created</response>
        [HttpPost]
        [Route("/Users/UserLogin")]
        [SwaggerResponse(statusCode: 201, type: typeof(UserLogin), description: "Created")]
        public virtual IActionResult UsersUserLoginPost([FromBody]UserLogin body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(UserLogin));
            string exampleJson = null;
            exampleJson = "{\n  \"loginName\" : \"loginName\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"passwordHash\" : \"passwordHash\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserLogin>(exampleJson)
                        : default(UserLogin);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userLoginId"></param>
        /// <response code="204">No Content</response>
        [HttpDelete]
        [Route("/Users/UserLogin/{userLoginId}")]
        public virtual IActionResult UsersUserLoginUserLoginIdDelete([FromRoute][Required]Guid? userLoginId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userLoginId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Users/UserLogin/{userLoginId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserLogin), description: "Success")]
        public virtual IActionResult UsersUserLoginUserLoginIdGet([FromRoute][Required]Guid? userLoginId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserLogin));
            string exampleJson = null;
            exampleJson = "{\n  \"loginName\" : \"loginName\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"passwordHash\" : \"passwordHash\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserLogin>(exampleJson)
                        : default(UserLogin);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="userLoginId"></param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPut]
        [Route("/Users/UserLogin/{userLoginId}")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserLogin), description: "Success")]
        public virtual IActionResult UsersUserLoginUserLoginIdPut([FromRoute][Required]string userLoginId, [FromBody]UserLogin body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserLogin));
            string exampleJson = null;
            exampleJson = "{\n  \"loginName\" : \"loginName\",\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"userId\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n  \"passwordHash\" : \"passwordHash\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserLogin>(exampleJson)
                        : default(UserLogin);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
