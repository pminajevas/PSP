/*
 * PoS
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Service : IEquatable<Service>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>

        [DataMember(Name="id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or Sets BusinessId
        /// </summary>

        [DataMember(Name="businessId")]
        public Guid? BusinessId { get; set; }

        /// <summary>
        /// Gets or Sets StaffId
        /// </summary>

        [DataMember(Name="staffId")]
        public Guid? StaffId { get; set; }

        /// <summary>
        /// Gets or Sets DiscountId
        /// </summary>

        [DataMember(Name="discountId")]
        public Guid? DiscountId { get; set; }

        /// <summary>
        /// Gets or Sets ServiceName
        /// </summary>

        [DataMember(Name="serviceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// Gets or Sets ServiceDescription
        /// </summary>

        [DataMember(Name="serviceDescription")]
        public string ServiceDescription { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>

        [DataMember(Name="duration")]
        public double? Duration { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>

        [DataMember(Name="price")]
        public double? Price { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Service {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BusinessId: ").Append(BusinessId).Append("\n");
            sb.Append("  StaffId: ").Append(StaffId).Append("\n");
            sb.Append("  DiscountId: ").Append(DiscountId).Append("\n");
            sb.Append("  ServiceName: ").Append(ServiceName).Append("\n");
            sb.Append("  ServiceDescription: ").Append(ServiceDescription).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Service)obj);
        }

        /// <summary>
        /// Returns true if Service instances are equal
        /// </summary>
        /// <param name="other">Instance of Service to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Service other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    BusinessId == other.BusinessId ||
                    BusinessId != null &&
                    BusinessId.Equals(other.BusinessId)
                ) && 
                (
                    StaffId == other.StaffId ||
                    StaffId != null &&
                    StaffId.Equals(other.StaffId)
                ) && 
                (
                    DiscountId == other.DiscountId ||
                    DiscountId != null &&
                    DiscountId.Equals(other.DiscountId)
                ) && 
                (
                    ServiceName == other.ServiceName ||
                    ServiceName != null &&
                    ServiceName.Equals(other.ServiceName)
                ) && 
                (
                    ServiceDescription == other.ServiceDescription ||
                    ServiceDescription != null &&
                    ServiceDescription.Equals(other.ServiceDescription)
                ) && 
                (
                    Duration == other.Duration ||
                    Duration != null &&
                    Duration.Equals(other.Duration)
                ) && 
                (
                    Price == other.Price ||
                    Price != null &&
                    Price.Equals(other.Price)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (BusinessId != null)
                    hashCode = hashCode * 59 + BusinessId.GetHashCode();
                    if (StaffId != null)
                    hashCode = hashCode * 59 + StaffId.GetHashCode();
                    if (DiscountId != null)
                    hashCode = hashCode * 59 + DiscountId.GetHashCode();
                    if (ServiceName != null)
                    hashCode = hashCode * 59 + ServiceName.GetHashCode();
                    if (ServiceDescription != null)
                    hashCode = hashCode * 59 + ServiceDescription.GetHashCode();
                    if (Duration != null)
                    hashCode = hashCode * 59 + Duration.GetHashCode();
                    if (Price != null)
                    hashCode = hashCode * 59 + Price.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Service left, Service right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Service left, Service right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
